{{- if and .Values.ksocNodeAgent .Values.ksocNodeAgent.enabled -}}
{{- $openshiftEnabled := and .Values.openshift .Values.openshift.enabled }}
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: ksoc-high-priority
value: 1000000
globalDefault: false
description: "This priority class should be used for node agent only."

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ksoc-node-agent
  namespace: {{ .Release.Namespace }}
  labels:
    app_name: ksoc-node-agent
    app_version: {{ .Values.ksocNodeAgent.image.tag | quote }}
    maintained_by: ksoc
spec:
  selector:
    matchLabels:
      app_name: ksoc-node-agent
  updateStrategy:
{{ toYaml .Values.ksocNodeAgent.updateStrategy | indent 4 }}
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/agent: unconfined
        prometheus.io/path: "/"
        prometheus.io/scrape: "true"
      labels:
        app_name: ksoc-node-agent
        app_version: {{ .Values.ksocNodeAgent.image.tag | quote }}
        maintained_by: ksoc
    spec:
      {{- if .Values.workloads.imagePullSecretName }}
      imagePullSecrets:
        - name: {{ .Values.workloads.imagePullSecretName }}
      {{- end }}
      # hostPID is enabled by default when running on openshift
      hostPID: {{ (quote .Values.ksocNodeAgent.agent.hostPID | empty) | ternary $openshiftEnabled .Values.ksocNodeAgent.agent.hostPID }}
      initContainers:
{{ include "ksoc-plugins.bootstrap-initcontainer" . | indent 8 }}
      containers:
        - command:
            - micro-agent
          env:
            - name: AGENT_AGENT_VERSION
              value: {{ .Values.ksocNodeAgent.image.tag | quote }}
            - name: AGENT_CHART_VERSION
              value: {{ .Chart.Version }}
            - name: AGENT_KSOC_API_URL
              value: {{ .Values.ksoc.apiUrl }}
            - name: AGENT_KSOC_NAMESPACE
              value: {{ .Release.Namespace }}
            {{- if .Values.ksoc.awsSecretId }}
            - name: RAD_AWS_SECRET_ID
              value: {{ .Values.ksoc.awsSecretId }}
            {{- else }}
            - name: AGENT_KSOC_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  {{ if .Values.ksoc.accessKeySecretNameOverride -}}
                  name: {{ .Values.ksoc.accessKeySecretNameOverride }}
                  {{ else -}}
                  name: ksoc-access-key
                  {{ end -}}
                  key: access-key-id
            - name: AGENT_KSOC_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  {{ if .Values.ksoc.accessKeySecretNameOverride -}}
                  name: {{ .Values.ksoc.accessKeySecretNameOverride }}
                  {{ else -}}
                  name: ksoc-access-key
                  {{ end -}}
                  key: secret-key
            {{- end }}
            - name: HOST_ROOT
              value: /host


            {{- with .Values.ksocNodeAgent.agent.collectors }}
            # containerd is enabled by default unless running on OpenShift.
            - name: AGENT_TRACER_COLLECTOR_CONTAINERD_ENABLED
              value: {{ (quote .containerd.enabled | empty) | ternary (not $openshiftEnabled) .containerd.enabled | quote }}
            - name: AGENT_TRACER_COLLECTOR_CONTAINERD_SOCKET
              value: {{ .containerd.socket | quote }}

            # crio is enabled by default when running on OpenShift.
            - name: AGENT_TRACER_COLLECTOR_CRIO_ENABLED
              value: {{ (quote .crio.enabled | empty) | ternary $openshiftEnabled .crio.enabled | quote}}
            - name: AGENT_TRACER_COLLECTOR_CRIO_SOCKET
              value: {{ .crio.socket | quote }}

            - name: AGENT_TRACER_COLLECTOR_DOCKER_ENABLED
              value: {{ .docker.enabled | quote }}
            - name: AGENT_TRACER_COLLECTOR_DOCKER_SOCKET
              value: {{ .docker.socket | quote }}

            {{- if .runtimePath }}
            - name: RUNTIME_PATH
              value: {{ .runtimePath | quote }}
            {{- end }}
            {{- end }}

            - name: AGENT_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: AGENT_TRACER_AUTO_MOUNT_FILESYSTEMS
              value: "1"
            - name: AGENT_TRACER_NET_IGNORE_HOST_NETWORK_NS
              value: "true"
            {{- if .Values.ksocNodeAgent.reachableVulnerabilitiesEnabled }}
            - name: AGENT_TRACER_OPEN_ENABLED
              value: "true"
            - name: AGENT_TRACER_OPEN_PREFIXES
              value: "/lib,/lib64,/usr,/bin,/sbin"
            {{- end }}
            {{- if .Values.ksocNodeAgent.agent.eventQueueSize }}
            - name: AGENT_EVENT_QUEUE_SIZE
              value: {{ .Values.ksocNodeAgent.agent.eventQueueSize | quote }}
            {{- end }}
            {{- if .Values.ksocNodeAgent.agent.grpcServerBatchSize }}
            - name: AGENT_GRPC_SERVER_BATCH_SIZE
              value: {{ .Values.ksocNodeAgent.agent.grpcServerBatchSize | quote }}
            {{- end }}
            {{- range $key, $value := .Values.ksocNodeAgent.agent.env }}
            - name: "{{ $key }}"
              value: "{{ $value }}"
            {{- end }}
          image: {{ .Values.ksocNodeAgent.image.repository }}:{{ .Values.ksocNodeAgent.image.tag }}
          imagePullPolicy: Always
          name: agent
          ports:
            - containerPort: 8000
          resources:
{{ toYaml .Values.ksocNodeAgent.agent.resources | indent 12 }}
          securityContext:
            capabilities:
              add:
                - SYS_ADMIN
                - SYSLOG
                - SYS_PTRACE
                - SYS_RESOURCE
                - IPC_LOCK
                - NET_ADMIN
                - NET_RAW
              drop:
                - ALL
            privileged: false
            runAsUser: 0
            seLinuxOptions:
              type: super_t
          volumeMounts:
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: api-token
              readOnly: true
            - mountPath: /tmp
              name: unix-socket
            - mountPath: /host/bin
              name: bin
              readOnly: true
            - mountPath: /host/etc
              name: etc
            - mountPath: /host/opt
              name: opt
            - mountPath: /host/usr
              name: usr
              readOnly: true
            - mountPath: /host/run
              name: run
              readOnly: true
            - mountPath: /host/proc
              name: proc
              readOnly: true
            - mountPath: /run
              name: run
            - mountPath: /sys/kernel/debug
              name: debugfs
            - mountPath: /sys/kernel/tracing
              name: tracefs
            - mountPath: /sys/fs/cgroup
              name: cgroup
            - mountPath: /sys/fs/bpf
              name: bpffs
            {{- with .Values.ksocNodeAgent.agent.mounts.volumeMounts }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
        - command:
            - micro-exporter
          env:
            - name: EXPORTER_AGENT_VERSION
              value: {{ .Values.ksocNodeAgent.image.tag | quote }}
            - name: EXPORTER_CHART_VERSION
              value: {{ .Chart.Version }}
            - name: EXPORTER_KSOC_API_URL
              value: {{ .Values.ksoc.apiUrl }}
            - name: EXPORTER_KSOC_NAMESPACE
              value: {{ .Release.Namespace }}
            {{- if .Values.ksoc.awsSecretId }}
            - name: RAD_AWS_SECRET_ID
              value: {{ .Values.ksoc.awsSecretId }}
            {{- else }}
            - name: EXPORTER_KSOC_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  {{ if .Values.ksoc.accessKeySecretNameOverride -}}
                  name: {{ .Values.ksoc.accessKeySecretNameOverride }}
                  {{ else -}}
                  name: ksoc-access-key
                  {{ end -}}
                  key: access-key-id
            - name: EXPORTER_KSOC_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  {{ if .Values.ksoc.accessKeySecretNameOverride -}}
                  name: {{ .Values.ksoc.accessKeySecretNameOverride }}
                  {{ else -}}
                  name: ksoc-access-key
                  {{ end -}}
                  key: secret-key
            - name: EXPORTER_PROVIDER_KSOC_API_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  {{ if .Values.ksoc.accessKeySecretNameOverride -}}
                  name: {{ .Values.ksoc.accessKeySecretNameOverride }}
                  {{ else -}}
                  name: ksoc-access-key
                  {{ end -}}
                  key: access-key-id
            - name: EXPORTER_PROVIDER_KSOC_API_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  {{ if .Values.ksoc.accessKeySecretNameOverride -}}
                  name: {{ .Values.ksoc.accessKeySecretNameOverride }}
                  {{ else -}}
                  name: ksoc-access-key
                  {{ end -}}
                  key: secret-key
            {{- end }}
            - name: EXPORTER_PROVIDER_STDOUT_ENABLED
              value: "false"
            - name: EXPORTER_PROVIDER_KSOC_API_ENABLED
              value: "true"
            - name: EXPORTER_PROVIDER_KSOC_API_URL
              value: {{ .Values.ksoc.apiUrl }}
            {{ if .Values.ksocNodeAgent.exporter.execFilters -}}
            {{- $filters := printf "execFilters: %s" (.Values.ksocNodeAgent.exporter.execFilters | toJson ) -}}
            - name: EXPORTER_EXEC_FILTERS
              value: {{  $filters | fromYaml | toJson | squote }}
            {{- end }}
            {{- range $key, $value := .Values.ksocNodeAgent.exporter.env }}
            - name: "{{ $key }}"
              value: "{{ $value }}"
            {{- end }}
          image: {{ .Values.ksocNodeAgent.image.repository }}:{{ .Values.ksocNodeAgent.image.tag }}
          imagePullPolicy: Always
          name: exporter
          ports:
            - containerPort: 8001
          resources:
{{ toYaml .Values.ksocNodeAgent.exporter.resources | indent 12 }}
          volumeMounts:
            - mountPath: /tmp
              name: unix-socket
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: api-token
              readOnly: true
      dnsPolicy: ClusterFirst
      {{ if .Values.ksocNodeAgent.nodeName -}}
      nodeName: {{ .Values.ksocNodeAgent.nodeName }}
      {{ end -}}
      {{- with .Values.ksocNodeAgent.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
        {{- end }}
      restartPolicy: Always
      automountServiceAccountToken: false
      serviceAccountName: ksoc-node-agent
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
      {{- with .Values.ksocNodeAgent.tolerations }}
{{ toYaml . | indent 8 }}
      {{- end }}
      volumes:
        - name: api-token
          secret:
            secretName: ksoc-node-agent-api-token-secret
        - name: unix-socket
        - hostPath:
            path: /bin
            type: ""
          name: bin
        - hostPath:
            path: /etc
            type: ""
          name: etc
        - hostPath:
            path: /opt
            type: ""
          name: opt
        - hostPath:
            path: /usr
            type: ""
          name: usr
        - hostPath:
            path: /proc
            type: ""
          name: proc
        - hostPath:
            path: /run
            type: ""
          name: run
        - hostPath:
            path: /sys/fs/cgroup
            type: ""
          name: cgroup
        - hostPath:
            path: /sys/fs/bpf
            type: ""
          name: bpffs
        - hostPath:
            path: /sys/kernel/debug
            type: ""
          name: debugfs
        - hostPath:
            path: /sys/kernel/tracing
            type: ""
          name: tracefs
        {{- with .Values.ksocNodeAgent.agent.mounts.volumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
{{- end -}}
